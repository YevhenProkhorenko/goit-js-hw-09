{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAYF,SAASC,cAAc,UAGnCE,EAAaC,OAAOL,EAAKM,SAASC,MAAMC,OAExCC,GADYJ,OAAOL,EAAKM,SAASI,KAAKF,OACzBH,OAAOL,EAAKM,SAASK,OAAOH,QAuB/C,SAASI,EAAcC,EAAUN,GAC/B,MAAMO,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC7BC,YAAW,KACLN,EACJI,EAAQ,uBAAqBL,QAAiBN,OAE5CY,EAAK,sBAAoBN,QAAeN,SAEzCH,MAvBLD,EAAUkB,iBAAiB,SAE3B,WAEE,IAAK,IAAIC,EAAI,EAAGA,GAAKb,EAAYa,GAAK,EACpCV,EAAcU,EAAGlB,GAAYmB,OAAOC","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nconst submitBtn = document.querySelector('button');\n\n\nconst firstDelay = Number(form.elements.delay.value);\nconst delayStep = Number(form.elements.step.value);\nconst amountProm = Number(form.elements.amount.value);\n\n\nlet promtCounter = 0;\n\nlet timerID = 0;\n\n\n\nsubmitBtn.addEventListener('click', pushSubmit);\n\nfunction pushSubmit() {  \n\n  for (let i = 0; i <= amountProm; i += 1){\n    createPromise(i, firstDelay).then().catch();\n  }\n\n  // setInterval(() => {  \n   \n  // }, delayStep);\n  \n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n  setTimeout(() => {\n    if (shouldResolve) {\n    resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {     \n    reject(`❌ Rejected promise ${position} in ${delay}ms`); \n  }\n  }, firstDelay);\n  })  \n}"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$submitBtn","$47d4ff9957288465$var$firstDelay","Number","elements","delay","value","$47d4ff9957288465$var$amountProm","step","amount","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","i","then","catch"],"version":3,"file":"03-promises.cbca6ad8.js.map"}