{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAYF,SAASC,cAAc,UAGnCE,EAAYC,OAAOL,EAAKM,SAASC,MAAMC,OACvCC,EAAYJ,OAAOL,EAAKM,SAASI,KAAKF,OACtCG,EAAaN,OAAOL,EAAKM,SAASM,OAAOJ,OAS/CL,EAAUU,iBAAiB,SAE3B,WAEEC,aAAY,MAMd,SAAuBC,EAAUR,GAC/B,MAAMS,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,IACF,IAAIC,SAAQ,CAACC,EAASC,KAC3BN,EACFK,EAAQE,QAAQC,IAAI,uBAAqBT,QAAiBR,QAExDe,EAAKC,QAAQC,IAAI,sBAAoBT,QAAiBR,YAGvDH,GAhBFqB,CAAcd,EAAYF,KACxBA","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nconst submitBtn = document.querySelector('button');\n\n\nconst firsDelay = Number(form.elements.delay.value);\nconst delayStep = Number(form.elements.step.value);\nconst amountProm = Number(form.elements.amount.value);\n\n\nlet promtCounter = 0;\n\nlet timerID = 0;\n\n\n\nsubmitBtn.addEventListener('click', pushSubmit);\n\nfunction pushSubmit() {\n\n  setInterval(() => {  \n   createPromise(amountProm, delayStep)\n  }, delayStep);\n  \n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  setTimeout(() => {\n    return new Promise((resolve, reject) => {\n  if (shouldResolve) {\n    resolve(console.log(`✅ Fulfilled promise ${position} in ${delay}ms`));\n  } else {     \n    reject(console.log(`❌ Rejected promise ${position} in ${delay}ms`)); \n  }\n  })\n  }, firsDelay);\n}\n\n\n\n\n\n\n\n// ///////// НЕ правильний варіант\n// function createPromise(position, delay) {  \n//   const shouldResolve = Math.random() > 0.3;  \n  \n//   setTimeout(() => {\n//     if (shouldResolve) {\n//       timerID = setInterval(() => {\n//       position = Number(amountProm);\n//       delay = Number(delayStep);\n//         console.log('position:', position)\n//         console.log('delay:' , delay)\n//       if (promtCounter === amountProm) {\n//         return;\n//       }        \n//       return new Promise(({ position, delay }) => {\n        \n//         console.log(`✅ Fulfilled promise ${position} in ${delay}ms`)\n//       })\n//     }, delay);\n//     }\n//     else {\n//       clearInterval(timerID);\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`)\n//   }\n//   }, firsDelay)     \n// }\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$submitBtn","$47d4ff9957288465$var$firsDelay","Number","elements","delay","value","$47d4ff9957288465$var$delayStep","step","$47d4ff9957288465$var$amountProm","amount","addEventListener","setInterval","position","shouldResolve","Math","random","setTimeout","Promise","resolve","reject","console","log","$47d4ff9957288465$var$createPromise"],"version":3,"file":"03-promises.7390f490.js.map"}